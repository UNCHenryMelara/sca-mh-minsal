<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class MinSalSidPlaAdminBundleEntityEmpleadoProxy extends \MinSal\SidPla\AdminBundle\Entity\Empleado implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function setIdEmpleado($idEmpleado)
    {
        $this->__load();
        return parent::setIdEmpleado($idEmpleado);
    }

    public function getIdEmpleado()
    {
        $this->__load();
        return parent::getIdEmpleado();
    }

    public function setPrimerNombre($primerNombre)
    {
        $this->__load();
        return parent::setPrimerNombre($primerNombre);
    }

    public function getPrimerNombre()
    {
        $this->__load();
        return parent::getPrimerNombre();
    }

    public function setSegundoNombre($segundoNombre)
    {
        $this->__load();
        return parent::setSegundoNombre($segundoNombre);
    }

    public function getSegundoNombre()
    {
        $this->__load();
        return parent::getSegundoNombre();
    }

    public function setPrimerApellido($primerApellido)
    {
        $this->__load();
        return parent::setPrimerApellido($primerApellido);
    }

    public function getPrimerApellido()
    {
        $this->__load();
        return parent::getPrimerApellido();
    }

    public function setSegundoApellido($segundoApellido)
    {
        $this->__load();
        return parent::setSegundoApellido($segundoApellido);
    }

    public function getSegundoApellido()
    {
        $this->__load();
        return parent::getSegundoApellido();
    }

    public function setDui($dui)
    {
        $this->__load();
        return parent::setDui($dui);
    }

    public function getDui()
    {
        $this->__load();
        return parent::getDui();
    }

    public function setUnidadOrganizativa(\MinSal\SidPla\AdminBundle\Entity\UnidadOrganizativa $unidadOrganizativa)
    {
        $this->__load();
        return parent::setUnidadOrganizativa($unidadOrganizativa);
    }

    public function getUnidadOrganizativa()
    {
        $this->__load();
        return parent::getUnidadOrganizativa();
    }

    public function setUsuario(\MinSal\SidPla\UsersBundle\Entity\User $usuario)
    {
        $this->__load();
        return parent::setUsuario($usuario);
    }

    public function getUsuario()
    {
        $this->__load();
        return parent::getUsuario();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idEmpleado', 'primerNombre', 'segundoNombre', 'primerApellido', 'segundoApellido', 'dui', 'unidadOrganizativa', 'usuario', 'email');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}